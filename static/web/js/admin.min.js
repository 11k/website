!function(){var e={};e.prepareGraphData=function(a,t,r,n){var i={};switch(n.toUpperCase()){case"DAYS":i=e.fillGraphDates(a,t,r,n,"YYYY-MM-DD","MM/D","");break;case"MONTHS":i=e.fillGraphDates(a,t,r,n,"YYYY-MM","YY/MM","-01");break;case"YEARS":i=e.fillGraphDates(a,t,r,n,"YYYY","YYYY","-01-01")}return i},e.fillGraphDates=function(e,a,t,r,n,i,o){for(var u=[],c=[],d=[],s=moment({hour:1}).subtract(t,r),f=moment({hour:1}),p=s;p.isBefore(f)||p.isSame(f);p.add(1,r))d.push(p.format(n)+o),c.push(p.format(i)),u.push(0);for(var l=0;l<e.length;++l){var g=d.indexOf(e[l].date);g!=-1&&(u[g]=e[l][a])}return{labels:c,data:u}},e.formatCurrency=function(e){return"$"+e.toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},window.GraphUtil=e}(),function(){$("#userlist").each(function(){var e=$(this),a=$("#userSearchForm"),t=e.data("page"),r=e.data("size"),n=e.data("feature"),i=e.find("#resetuserlist"),o=a.find('input[name="search"]'),u=o.val();e.find(".pagination").on("click","a",function(){return t=$(this).data("page"),e.trigger("gridupdate"),!1}),a.find('select[name="feature"]').on("change",function(){return t=1,n=$(this).val(),u="",e.trigger("gridupdate"),!1}).val(n),e.find('select[name="size"]').on("change",function(){return t=1,r=$(this).val(),e.trigger("gridupdate"),!1}).val(r),i.on("click",function(){return r="",t=1,n="",u="",e.trigger("gridupdate"),!1}),e.on("gridupdate",function(){window.location.href="/admin/users/?size="+encodeURIComponent(r)+"&page="+encodeURIComponent(t)+"&feature="+encodeURIComponent(n)+"&search="+encodeURIComponent(u)}),a.on("submit",function(){return r="",t=1,u=o.val(),e.trigger("gridupdate"),!1})})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
