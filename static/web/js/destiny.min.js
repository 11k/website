destiny={cdn:function(){var t=document.getElementsByTagName("script"),e=t[t.length-1].src;return e.substring(0,e.indexOf("/web/js/destiny.min.js"))}(),token:"",baseUrl:"/",timeout:15e3,fn:{}},$(function(){var t=$("body"),e={height:500,width:420,scrollbars:0,toolbar:0,location:0,status:"no",menubar:0,resizable:0,dependent:0};window.getOptionsString=function(t){t=t?$.extend({},e,t):e;var n="";for(var a in t)t.hasOwnProperty(a)&&(n+=a+"="+t[a]+",");return n},$("body#bigscreen").each(function(){var t=$("#chat-panel"),e=$("#stream-panel"),n=$("iframe#chat-frame"),a=$('<div class="overlay" />');n.on("load",function(){var n=this.contentWindow;n&&$("#chat-panel-tools").each(function(){$(this).on("click","#popout",function(){return window.open("/embed/chat","_blank",window.getOptionsString()),$("body").addClass("nochat"),t.remove(),e.removeAttr("style"),!1}),$(this).on("click","#refresh",function(){return n.location.reload(),!1}),$(this).on("click","#close",function(){return $("body").addClass("nochat"),t.remove(),e.removeAttr("style"),!1})})}),$("#chat-panel-resize-bar").each(function(){var n=$(this),i=320,o=768;n.css("left",0);var r=function(a){a<i&&(a=i),e.css("width","-moz-calc(100% - "+a+"px)"),e.css("width","-webkit-calc(100% - "+a+"px)"),e.css("width","-o-calc(100% - "+a+"px)"),e.css("width","calc(100% - "+a+"px)"),t.css("width",a),n.css("left",0),localStorage["bigscreen.chat.width"]=a};n.on("mousedown.chatresize",function(e){e.preventDefault(),n.addClass("active"),a.appendTo("body");var i=e.clientX,o=n.position().left;$(document).on("mouseup.chatresize",function(e){e.preventDefault(),n.removeClass("active"),a.remove(),n.css("left",o+(e.clientX-i)),$(document).unbind("mousemove.chatresize"),$(document).unbind("mouseup.chatresize"),r(t.offset().left+t.outerWidth()-n.offset().left)}),$(document).on("mousemove.chatresize",function(t){t.preventDefault(),n.css("left",o+(t.clientX-i))})}),$(window).on("resize.chatresize",function(){$(window).width()<=o&&(e.removeAttr("style"),t.removeAttr("style"))});var s=parseInt(localStorage["bigscreen.chat.width"]);s>i&&$(window).width()>o&&r(s)})}),$(".btn-show-all").on("click",function(t){t.preventDefault(),$(".collapse").collapse("show")}),""!==location.hash&&$('a[href="'+location.hash+'"]').tab("show"),$('.navbar a[rel="'+t.attr("id")+'"]').closest("li").addClass("active"),$('.navbar a[rel="'+t.attr("class")+'"]').closest("li").addClass("active"),t.on("click","a.popup",function(t){var e=$(this);return e.data("popup",window.open(e.attr("href"),"_blank",window.getOptionsString(e.data("options")))),t.preventDefault(),!0}),$(this).find("img[data-src]").each(function(){var t=$(this),e=t.data("src");if(""!=e&&null!=e){var n=t.clone();n.one("load",function(){t.replaceWith(n)}),n.removeAttr("src").removeAttr("data-src").attr("src",e)}}),$(this).find('[data-toggle="tooltip"]').tooltip()}),function(){var t=function(t){var e=$(t),n=e.data("datetime")||e.attr("datetime")||e.text(),a=e.data("format")||"MMMM Do, h:mm:ss a";e.data("moment-fromnow")?(e.addClass("moment-update"),e.html(moment(n).fromNow())):e.data("moment-calendar")?(e.addClass("moment-update"),e.html(moment(n).calendar())):e.html(moment(n).format(a)),e.data("datetime",n).addClass("moment-set")};window.setInterval(function(){$("time.moment-update").each(function(){t(this)})},3e4),$('time[data-moment="true"]:not(.moment-set)').each(function(){t(this)})}(),function(){window.setInterval(function(){$.ajax({url:"/ping",method:"get"})},6e5)}(),function(){var t=$("#userSearchModal"),e=t.find("input#userSearchInput"),n=t.find("button#userSearchSelect"),a=t.find("form#userSearchForm"),i=t.find("textarea#giftmessage"),o=!1,r="",s=function(t,e){$.ajax({url:"/gift/check",data:{s:t},type:"GET",success:function(t){e.call(this,t)},error:function(){d("Error looking up user. Try again")}})},d=function(e){o=!0,n.button("reset").attr("disabled",!0),t.find("label.error").text(e).removeClass("hidden")},c=function(){t.modal("hide"),e.val(""),i.val(""),$("#subscriptionGiftUsername").text(""),$("#giftSubscriptionConfirm").addClass("hidden"),$("#giftSubscriptionSelect").removeClass("hidden"),$('input[name="gift"]').val(""),$('input[name="gift-message"]').val("")},l=function(t){n.button("loading"),s(t,function(e){e.valid&&e.cangift?(r=t,""==i.val()?i.focus():a.submit(),n.button("reset").attr("disabled",!1),o=!1):e.valid?e.cangift||d("This user is not eligible for a gift."):d("This user was not found. Try again.")})};e.on("keydown change",function(){n.attr("disabled",""==$(this).val()),t.find("label.error").addClass("hidden")}),a.on("submit",function(){return t.find("label.error").addClass("hidden"),r!=e.val()?l(e.val()):($("#subscriptionGiftUsername").text(e.val()),$("#giftSubscriptionConfirm").removeClass("hidden"),$("#giftSubscriptionSelect").addClass("hidden"),$('input[name="gift"]').val(e.val()),$('input[name="gift-message"]').val(i.val()),t.modal("hide")),!1}),t.on("shown.bs.modal",function(t){e.focus()}),t.on("hidden.bs.modal",function(n){o&&(o=!1,r="",e.val(""),i.val(""),t.find("label.error").addClass("hidden"))}),$("#cancelGiftSubscription").on("click",function(){return t.find("label.error").addClass("hidden"),c(),!1})}(),$(function(){$("form#addressSaveForm").validate({rules:{fullName:{required:!0},line1:{required:!0},line2:{required:!1},city:{required:!0},region:{required:!0},zip:{required:!0},country:{required:!0}},highlight:function(t){$(t).closest(".form-group").addClass("error")},unhighlight:function(t){$(t).closest(".form-group").removeClass("error")}})}),$(function(){$("#stream-status").each(function(){var t=$(this),e=t.find("#stream-status-preview > a"),n=t.find("#stream-status-end"),a=t.find("#stream-status-start"),i=t.find("#stream-status-host"),o={live:!1,game:null,preview:"",animated_preview:"",status_text:"",started_at:null,ended_at:"",duration:0,viewers:0,host:{}},r=function(o){var r=o.host&&void 0!==o.host.target_id?"hosting":o.live?"online":"offline";t.removeClass("online offline hosting").addClass(r),n.text(moment(o.ended_at).fromNow()),a.text(moment(o.started_at).fromNow()),e.data("animated",o.animated_preview).css("background-image",o.preview),"hosting"==r&&(i.text(o.host.display_name),i.attr("href",o.host.url))};setInterval(function(){$.ajax({url:"/stream.json",type:"GET"}).success(function(t){try{null!=t&&void 0!=t&&(o=$.extend(o,t),r(o))}catch(t){}})},6e4),e.src=e.css("background-image"),e.animated="url("+e.data("animated")+")",e.on("mouseover",function(){e.css("background-image",e.animated)}).on("mouseout",function(){e.css("background-image",e.src)})})}),$(function(){$("#loginForm").each(function(){var t=$(this);t.on("click","#loginFormProviders label",function(){return $(this).find('[type="radio"]').prop("checked",!0),t.trigger("submit"),!1}),t.on("keyup","#loginFormProviders label",function(e){if(13==e.keyCode)return $(this).find('[type="radio"]').prop("checked",!0),t.trigger("submit"),!1})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
