// Message composition UI
$(function(){$("#compose.message-composition").each(function(){var e=$("#compose"),s=e.find(".modal-message"),t=e.find("#compose-form"),n=$("#alerts-container"),i=t.find("textarea#compose-message"),o=t.find("input#compose-recipients"),a=t.find(".modal-recipients .recipient-container"),c=t.find("button#modal-send-btn"),r=t.find("button#modal-close-btn"),l=t.find(".modal-user-groups"),d=!1,p=function(){t.find("button,input,textarea").attr("disabled","disabled")},u=function(){t.find("button,input,textarea").removeAttr("disabled")},f=function(){i.val(""),o.val(""),a.empty(),s.hide(),u()},m=function(){var t=i.val(),o=v();return 0==o.length?void s.show().html('<span class="text-danger">Recipients required</span>'):""==t.trim()?void s.show().html('<span class="text-danger">Message required</span>'):t.trim().length>500?void s.show().html('<span class="text-danger">Your message cannot be longer than 500 characters</span>'):(d=!0,p(),s.show().html('<i class="fa fa-cog fa-spin"></i> Sending message ...'),void $.ajax({type:"POST",url:"/profile/messages/send",data:{recipients:o,message:t},success:function(t){d=!1,1==t.success?(n.show().html('<div class="alert alert-info"><strong>Sent!</strong> Your message has been sent.</div>'),window.setTimeout(function(){n.hide()},3e3),e.modal("hide")):(s.show().html('<span class="text-danger">'+t.message+"</span>"),u())},error:function(e){d=!1,s.show().html('<span class="text-danger">'+e.status+": "+e.statusText+"</span>")}}))},h=function(e){for(var s=e.split(" "),t=[],n=0;n<s.length;++n)0==s[n].search(/^[A-Z0-9_]{3,20}$/i)&&t.push(s[n]);return t},g=function(e,s){var t=e.toLowerCase(),s=["recipient",s];a.find('.recipient[data-recipient="'+t+'"]').get(0)||a.append('<span class="'+s.join(" ")+'" data-recipient="'+t+'">                    <span class="recipient-name">'+e+'</span>                    <i class="glyphicon glyphicon-remove remove-recipient" title="Remove"></i>                  </span>')},v=function(){var e=[];return a.find(".recipient").each(function(){e.push($(this).data("recipient"))}),e};e.on("keydown",function(e){s.hide()}),e.on("shown.bs.modal",function(e){$(this).find("input#compose-recipients").focus()}),e.on("hidden.bs.modal",function(e){d||f()}),e.on("click",".remove-recipient",function(){$(this).closest(".recipient").remove()}),e.on("change","input#compose-recipients",function(e){var s=h($(this).val());o.val("");for(var t=0;t<s.length;++t)g(s[t])}),e.on("keypress","input#compose-recipients",function(e){var s=/[\;\:\,\']/i,t=e.which,n=32,i=13;if(t==n||t==i||s.test(String.fromCharCode(t))){var a=h($(this).val());o.val("");for(var c=0;c<a.length;++c)g(a[c]);e.preventDefault(),e.stopPropagation()}o.focus()}),r.on("click",function(s){e.modal("hide")}),c.on("click",function(e){m()}),i.on("keydown",function(e){e.ctrlKey&&13==e.keyCode&&(m(),e.preventDefault(),e.stopPropagation())}),l.on("click",".groups a",function(){g($(this).text(),"group")});var w=$("#compose");$(".message-list").on("click",".message-header,.message-summary",function(){$(this).closest(".message").toggleClass("message-active message-hidden")}),$(".message-reply").on("click","#reply-toggle",function(){w.unbind("shown.bs.modal").on("shown.bs.modal",function(){$(this).find("textarea").focus()}),w.find("#composeLabel").text("Reply ..."),w.find(".modal-recipients,.modal-settings,.modal-user-groups").hide(),o.val(""),a.empty(),g($(this).data("replyto"))}),$(".message-list").each(function(){var e=function(){$(this).closest(".message").addClass("message-active").removeClass("message-hidden")};$(this).on("click",".message-summary",e)})})}),$(function(){var e=$("table#inbox"),s=function(){$(this).find("i").attr("class","fa fa-dot-circle-o"),$(this).addClass("active")},t=function(){$(this).find("i").attr("class","fa fa-circle-o"),$(this).removeClass("active")},n=function(e){var n=$(this);n.closest("tr");e.preventDefault(),e.stopPropagation(),n.hasClass("active")?t.apply(n):s.apply(n)},i=function(e){var s=$(this),t=s.data("id");void 0!=t&&(e.preventDefault(),e.stopPropagation(),window.location.href="/profile/messages/"+t)},o=function(){$(this).addClass("pressed")},a=function(){$(this).removeClass("pressed")};e.each(function(e,s){$(s).on("click","tbody tr",i).on("click","tbody td.selector",n).on("mousedown","tbody tr",o).on("mouseup","tbody tr",a)}),$("#mark-all").on("click",function(e){e.preventDefault(),$.ajax({url:"/profile/messages/openall",success:function(){window.location.reload()}})})}),$(function(){var e=10,s=$(".message-list .message");if(s.length>e){var t=s.slice(0,-e);t.wrapAll('<div class="collapsed-group">                <div class="collapsed-group-label"><a href="#"><i class="fa fa-chevron-circle-down"></i> show '+t.length+" older messages</a></div>            </div>")}$(".message-list").on("click",".collapsed-group",function(e){$(this).addClass("active"),e.preventDefault()}),$(window).on("load",function(){$(".message-reply").each(function(){var e=$(this),s=e.offset().top+e.outerHeight(!0)-$(window).height();$("html,body").animate({scrollTop:s},5)})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
